# -*- coding: utf-8 -*-
"""Location based anyalsis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PW9M5dd9_vjoBHDT-l-o8AH4NAG-1UU5
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import folium
from folium.plugins import MarkerCluster

# Load the dataset
df = pd.read_csv('/content/Dataset  (1).csv')

# Show basic info
df.head()

# Check for columns related to location
print(df.columns.tolist())

# Check for missing lat/lon
print(df[['Latitude', 'Longitude']].isnull().sum())

# Drop rows without coordinates (if any)
df = df.dropna(subset=['Latitude', 'Longitude'])

# Create a basic map centered around India
m = folium.Map(location=[20.5937, 78.9629], zoom_start=5)

# Add marker cluster
marker_cluster = MarkerCluster().add_to(m)

# Add restaurant locations to the map
for idx, row in df.iterrows():
    folium.Marker(
        location=[row['Latitude'], row['Longitude']],
        popup=row['Restaurant Name'] + " - " + str(row['Cuisines']),
        icon=folium.Icon(color='blue', icon='cutlery', prefix='fa')
    ).add_to(marker_cluster)

m

# Group by city and count restaurants
city_counts = df['City'].value_counts().reset_index()
city_counts.columns = ['City', 'Restaurant Count']

# Plot top 10 cities with most restaurants
plt.figure(figsize=(10,6))
sns.barplot(x='Restaurant Count', y='City', data=city_counts.head(10), palette='viridis')
plt.title('Top 10 Cities with Most Restaurants')
plt.xlabel('Number of Restaurants')
plt.ylabel('City')
plt.show()

# Group by city and get average rating, price, etc.
city_stats = df.groupby('City').agg({
    'Average Cost for two': 'mean',
    'Aggregate rating': 'mean',
    'Restaurant Name': 'count'
}).reset_index()

city_stats.columns = ['City', 'Avg Cost for Two', 'Avg Rating', 'Restaurant Count']
city_stats.sort_values(by='Restaurant Count', ascending=False).head()

top_cuisines = df.groupby('City')['Cuisines'].apply(
    lambda x: x.mode().iloc[0] if not x.mode().empty else 'Unknown'
).reset_index()
top_cuisines.columns = ['City', 'Most Common Cuisine']

insights = pd.merge(city_stats, top_cuisines, on='City')
insights.head(10)

insights.to_csv('city_insights.csv', index=False)